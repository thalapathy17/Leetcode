class Solution {
    int m, n;
    int[][] memo;
    public int minimumDeleteSum(String s1, String s2) {

        m = s1.length();    
        n = s2.length();
        memo = new int[m+1][n+1];
        return solve(0, 0, s1, s2);
    }
    private int solve(int i, int j, String s1, String s2){
        if(i >= m && j >= n){
            return 0;
        }

        if (memo[i][j] != 0) return memo[i][j];
        
        if(i >= m){
            return memo[i][j] = s2.charAt(j) + solve(i, j+1, s1, s2);
        }
        if(j >= n){
            return memo[i][j] = s1.charAt(i) + solve(i+1, j, s1, s2);
        }
        if( s1.charAt(i) == s2.charAt(j)){
            return memo[i][j] = solve(i+1, j+1, s1, s2);
        }
        int delete_s1 = s1.charAt(i) + solve(i+1, j, s1, s2);
        int delete_s2 = s2.charAt(j) + solve(i, j+1, s1, s2);

        return memo[i][j] = Math.min(delete_s1, delete_s2);
    }
}
