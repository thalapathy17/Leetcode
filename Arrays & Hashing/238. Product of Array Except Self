class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n =nums.length;
        int[] left = new int[n];
        left[0] = 1;
        for(int i = 1; i < nums.length; i++){
            left[i] = nums[i-1] * left[i-1];
        }
        int[] right = new int[n];
        right[n-1] = 1;
        for(int i = n-2; i >= 0; i--){
            right[i] = nums[i+1]*right[i+1];
        }
        int[] res = new int[n];
        for(int i = 0; i < n; i++){
            res[i] = left[i]*right[i];
        }
        return res;
    }
}

class Solution {
    public int[] productExceptSelf(int[] nums) {
        int n = nums.length;
        int[] res = new int[n];

        res[0] = 1;
        for(int i = 1; i < n; i++){
            res[i] = res[i-1]*nums[i-1];
        }

        int postfix = 1;
        for(int i = n-1; i >= 0; i--){
            res[i] *= postfix;
            postfix *= nums[i];
        }
        return res;
    }
}